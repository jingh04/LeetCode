#Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.
#If such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order).
#The replacement must be in place and use only constant extra memory.

#Solution 1:
    def nextPermutation(self, nums: List[int]) -> None:
        i = len(nums)-2
        while i > -1:
            if nums[i] < nums[i+1]:
                pivot = j = i+1
                while j<len(nums) and nums[i] < nums[j]:
                    pivot = j
                    j += 1
                nums[i], nums[pivot] = nums[pivot], nums[i]
                break
            i-=1
        nums[i+1:] = nums[i+1:][::-1]
