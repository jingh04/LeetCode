#Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].
#Return the array in the form [x1,y1,x2,y2,...,xn,yn].

#Solution 1: my initial submission
class Solution(object):
    def shuffle(self, nums, n):
        """
        :type nums: List[int]
        :type n: int
        :rtype: List[int]
        """
        for i in range (n, len(nums)):
            nums.insert(2*(i-n+1)-1,nums.pop(i))
        return nums

#Solution 2: zip approach
def shuffle(self, nums: List[int], n: int) -> List[int]:
        res = []
        for i, j in zip(nums[:n],nums[n:]):
            res += [i,j]
        return res

#Solution 3: relatively straightforward
class Solution:
    def shuffle(self, nums: List[int], n: int) -> List[int]:
        lst=[]
        for i in range(n):
            lst+=[nums[i]]
            lst+=[nums[i+n]]
        return lst
