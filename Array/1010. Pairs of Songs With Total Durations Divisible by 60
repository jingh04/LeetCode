#In a list of songs, the i-th song has a duration of time[i] seconds. 
#Return the number of pairs of songs for which their total duration in seconds is divisible by 60.  Formally, we want the number of indices i, j such that i < j with (time[i] + time[j]) % 60 == 0.

#Solution 1: my submission/hash
class Solution:
    def numPairsDivisibleBy60(self, time: List[int]) -> int:
        hashmap = {}
        ans = 0
        for i in range(len(time)):
            if (time[i] % 60) == 0:
                if 0 in hashmap:
                    ans += hashmap[0]
            elif (60 - time[i] % 60) in hashmap:
                ans += hashmap[60 - time[i] % 60]
            if (time[i] % 60) in hashmap:
                hashmap[time[i]%60] += 1
            else:
                hashmap[time[i]%60] = 1
        return ans
